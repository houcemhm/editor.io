{"ast":null,"code":"const buttonSelectors = ['[data-md-button]', 'md-header', 'md-bold', 'md-italic', 'md-quote', 'md-code', 'md-link', 'md-image', 'md-unordered-list', 'md-ordered-list', 'md-task-list', 'md-mention', 'md-ref', 'md-strikethrough'];\nfunction getButtons(toolbar) {\n  const els = [];\n  for (const button of toolbar.querySelectorAll(buttonSelectors.join(', '))) {\n    if (button.hidden || button.offsetWidth <= 0 && button.offsetHeight <= 0) continue;\n    if (button.closest('markdown-toolbar') === toolbar) els.push(button);\n  }\n  return els;\n}\nfunction keydown(fn) {\n  return function (event) {\n    if (event.key === ' ' || event.key === 'Enter') {\n      event.preventDefault();\n      fn(event);\n    }\n  };\n}\nconst styles = new WeakMap();\nclass MarkdownButtonElement extends HTMLElement {\n  constructor() {\n    super();\n    const apply = () => {\n      const style = styles.get(this);\n      if (!style) return;\n      applyStyle(this, style);\n    };\n    this.addEventListener('keydown', keydown(apply));\n    this.addEventListener('click', apply);\n  }\n  connectedCallback() {\n    if (!this.hasAttribute('role')) {\n      this.setAttribute('role', 'button');\n    }\n  }\n  click() {\n    const style = styles.get(this);\n    if (!style) return;\n    applyStyle(this, style);\n  }\n}\nclass MarkdownHeaderButtonElement extends MarkdownButtonElement {\n  constructor() {\n    super();\n    const level = parseInt(this.getAttribute('level') || '3', 10);\n    if (level < 1 || level > 6) {\n      return;\n    }\n    const prefix = `${'#'.repeat(level)} `;\n    styles.set(this, {\n      prefix\n    });\n  }\n}\nif (!window.customElements.get('md-header')) {\n  window.MarkdownHeaderButtonElement = MarkdownHeaderButtonElement;\n  window.customElements.define('md-header', MarkdownHeaderButtonElement);\n}\nclass MarkdownBoldButtonElement extends MarkdownButtonElement {\n  constructor() {\n    super();\n    styles.set(this, {\n      prefix: '**',\n      suffix: '**',\n      trimFirst: true\n    });\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    this.setAttribute('hotkey', 'b');\n  }\n}\nif (!window.customElements.get('md-bold')) {\n  window.MarkdownBoldButtonElement = MarkdownBoldButtonElement;\n  window.customElements.define('md-bold', MarkdownBoldButtonElement);\n}\nclass MarkdownItalicButtonElement extends MarkdownButtonElement {\n  constructor() {\n    super();\n    styles.set(this, {\n      prefix: '_',\n      suffix: '_',\n      trimFirst: true\n    });\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    this.setAttribute('hotkey', 'i');\n  }\n}\nif (!window.customElements.get('md-italic')) {\n  window.MarkdownItalicButtonElement = MarkdownItalicButtonElement;\n  window.customElements.define('md-italic', MarkdownItalicButtonElement);\n}\nclass MarkdownQuoteButtonElement extends MarkdownButtonElement {\n  constructor() {\n    super();\n    styles.set(this, {\n      prefix: '> ',\n      multiline: true,\n      surroundWithNewlines: true\n    });\n  }\n}\nif (!window.customElements.get('md-quote')) {\n  window.MarkdownQuoteButtonElement = MarkdownQuoteButtonElement;\n  window.customElements.define('md-quote', MarkdownQuoteButtonElement);\n}\nclass MarkdownCodeButtonElement extends MarkdownButtonElement {\n  constructor() {\n    super();\n    styles.set(this, {\n      prefix: '`',\n      suffix: '`',\n      blockPrefix: '```',\n      blockSuffix: '```'\n    });\n  }\n}\nif (!window.customElements.get('md-code')) {\n  window.MarkdownCodeButtonElement = MarkdownCodeButtonElement;\n  window.customElements.define('md-code', MarkdownCodeButtonElement);\n}\nclass MarkdownLinkButtonElement extends MarkdownButtonElement {\n  constructor() {\n    super();\n    styles.set(this, {\n      prefix: '[',\n      suffix: '](url)',\n      replaceNext: 'url',\n      scanFor: 'https?://'\n    });\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    this.setAttribute('hotkey', 'k');\n  }\n}\nif (!window.customElements.get('md-link')) {\n  window.MarkdownLinkButtonElement = MarkdownLinkButtonElement;\n  window.customElements.define('md-link', MarkdownLinkButtonElement);\n}\nclass MarkdownImageButtonElement extends MarkdownButtonElement {\n  constructor() {\n    super();\n    styles.set(this, {\n      prefix: '![',\n      suffix: '](url)',\n      replaceNext: 'url',\n      scanFor: 'https?://'\n    });\n  }\n}\nif (!window.customElements.get('md-image')) {\n  window.MarkdownImageButtonElement = MarkdownImageButtonElement;\n  window.customElements.define('md-image', MarkdownImageButtonElement);\n}\nclass MarkdownUnorderedListButtonElement extends MarkdownButtonElement {\n  constructor() {\n    super();\n    styles.set(this, {\n      prefix: '- ',\n      multiline: true,\n      surroundWithNewlines: true\n    });\n  }\n}\nif (!window.customElements.get('md-unordered-list')) {\n  window.MarkdownUnorderedListButtonElement = MarkdownUnorderedListButtonElement;\n  window.customElements.define('md-unordered-list', MarkdownUnorderedListButtonElement);\n}\nclass MarkdownOrderedListButtonElement extends MarkdownButtonElement {\n  constructor() {\n    super();\n    styles.set(this, {\n      prefix: '1. ',\n      multiline: true,\n      orderedList: true\n    });\n  }\n}\nif (!window.customElements.get('md-ordered-list')) {\n  window.MarkdownOrderedListButtonElement = MarkdownOrderedListButtonElement;\n  window.customElements.define('md-ordered-list', MarkdownOrderedListButtonElement);\n}\nclass MarkdownTaskListButtonElement extends MarkdownButtonElement {\n  constructor() {\n    super();\n    styles.set(this, {\n      prefix: '- [ ] ',\n      multiline: true,\n      surroundWithNewlines: true\n    });\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    this.setAttribute('hotkey', 'L');\n  }\n}\nif (!window.customElements.get('md-task-list')) {\n  window.MarkdownTaskListButtonElement = MarkdownTaskListButtonElement;\n  window.customElements.define('md-task-list', MarkdownTaskListButtonElement);\n}\nclass MarkdownMentionButtonElement extends MarkdownButtonElement {\n  constructor() {\n    super();\n    styles.set(this, {\n      prefix: '@',\n      prefixSpace: true\n    });\n  }\n}\nif (!window.customElements.get('md-mention')) {\n  window.MarkdownMentionButtonElement = MarkdownMentionButtonElement;\n  window.customElements.define('md-mention', MarkdownMentionButtonElement);\n}\nclass MarkdownRefButtonElement extends MarkdownButtonElement {\n  constructor() {\n    super();\n    styles.set(this, {\n      prefix: '#',\n      prefixSpace: true\n    });\n  }\n}\nif (!window.customElements.get('md-ref')) {\n  window.MarkdownRefButtonElement = MarkdownRefButtonElement;\n  window.customElements.define('md-ref', MarkdownRefButtonElement);\n}\nclass MarkdownStrikethroughButtonElement extends MarkdownButtonElement {\n  constructor() {\n    super();\n    styles.set(this, {\n      prefix: '~~',\n      suffix: '~~',\n      trimFirst: true\n    });\n  }\n}\nif (!window.customElements.get('md-strikethrough')) {\n  window.MarkdownStrikethroughButtonElement = MarkdownStrikethroughButtonElement;\n  window.customElements.define('md-strikethrough', MarkdownStrikethroughButtonElement);\n}\nconst modifierKey = navigator.userAgent.match(/Macintosh/) ? 'Meta' : 'Control';\nclass MarkdownToolbarElement extends HTMLElement {\n  constructor() {\n    super();\n  }\n  connectedCallback() {\n    if (!this.hasAttribute('role')) {\n      this.setAttribute('role', 'toolbar');\n    }\n    this.addEventListener('keydown', focusKeydown);\n    const fn = shortcut.bind(null, this);\n    if (this.field) {\n      this.field.addEventListener('keydown', fn);\n      shortcutListeners.set(this, fn);\n    }\n    this.setAttribute('tabindex', '0');\n    this.addEventListener('focus', onToolbarFocus, {\n      once: true\n    });\n  }\n  disconnectedCallback() {\n    const fn = shortcutListeners.get(this);\n    if (fn && this.field) {\n      this.field.removeEventListener('keydown', fn);\n      shortcutListeners.delete(this);\n    }\n    this.removeEventListener('keydown', focusKeydown);\n  }\n  get field() {\n    const id = this.getAttribute('for');\n    if (!id) return null;\n    const root = 'getRootNode' in this ? this.getRootNode() : document;\n    let field;\n    if (root instanceof Document || root instanceof ShadowRoot) {\n      field = root.getElementById(id);\n    }\n    return field instanceof HTMLTextAreaElement ? field : null;\n  }\n}\nfunction onToolbarFocus(_ref) {\n  let {\n    target\n  } = _ref;\n  if (!(target instanceof Element)) return;\n  target.removeAttribute('tabindex');\n  let tabindex = '0';\n  for (const button of getButtons(target)) {\n    button.setAttribute('tabindex', tabindex);\n    if (tabindex === '0') {\n      button.focus();\n      tabindex = '-1';\n    }\n  }\n}\nfunction focusKeydown(event) {\n  const key = event.key;\n  if (key !== 'ArrowRight' && key !== 'ArrowLeft' && key !== 'Home' && key !== 'End') return;\n  const toolbar = event.currentTarget;\n  if (!(toolbar instanceof HTMLElement)) return;\n  const buttons = getButtons(toolbar);\n  const index = buttons.indexOf(event.target);\n  const length = buttons.length;\n  if (index === -1) return;\n  let n = 0;\n  if (key === 'ArrowLeft') n = index - 1;\n  if (key === 'ArrowRight') n = index + 1;\n  if (key === 'End') n = length - 1;\n  if (n < 0) n = length - 1;\n  if (n > length - 1) n = 0;\n  for (let i = 0; i < length; i += 1) {\n    buttons[i].setAttribute('tabindex', i === n ? '0' : '-1');\n  }\n  event.preventDefault();\n  buttons[n].focus();\n}\nconst shortcutListeners = new WeakMap();\nfunction findHotkey(toolbar, key) {\n  for (const el of toolbar.querySelectorAll('[hotkey]')) {\n    if (el.getAttribute('hotkey') === key) {\n      return el;\n    }\n  }\n  return null;\n}\nfunction shortcut(toolbar, event) {\n  if (event.metaKey && modifierKey === 'Meta' || event.ctrlKey && modifierKey === 'Control') {\n    const button = findHotkey(toolbar, event.key);\n    if (button) {\n      button.click();\n      event.preventDefault();\n    }\n  }\n}\nif (!window.customElements.get('markdown-toolbar')) {\n  window.MarkdownToolbarElement = MarkdownToolbarElement;\n  window.customElements.define('markdown-toolbar', MarkdownToolbarElement);\n}\nfunction isMultipleLines(string) {\n  return string.trim().split('\\n').length > 1;\n}\nfunction repeat(string, n) {\n  return Array(n + 1).join(string);\n}\nfunction wordSelectionStart(text, i) {\n  let index = i;\n  while (text[index] && text[index - 1] != null && !text[index - 1].match(/\\s/)) {\n    index--;\n  }\n  return index;\n}\nfunction wordSelectionEnd(text, i, multiline) {\n  let index = i;\n  const breakpoint = multiline ? /\\n/ : /\\s/;\n  while (text[index] && !text[index].match(breakpoint)) {\n    index++;\n  }\n  return index;\n}\nlet canInsertText = null;\nfunction insertText(textarea, _ref2) {\n  let {\n    text,\n    selectionStart,\n    selectionEnd\n  } = _ref2;\n  const originalSelectionStart = textarea.selectionStart;\n  const before = textarea.value.slice(0, originalSelectionStart);\n  const after = textarea.value.slice(textarea.selectionEnd);\n  if (canInsertText === null || canInsertText === true) {\n    textarea.contentEditable = 'true';\n    try {\n      canInsertText = document.execCommand('insertText', false, text);\n    } catch (error) {\n      canInsertText = false;\n    }\n    textarea.contentEditable = 'false';\n  }\n  if (canInsertText && !textarea.value.slice(0, textarea.selectionStart).endsWith(text)) {\n    canInsertText = false;\n  }\n  if (!canInsertText) {\n    try {\n      document.execCommand('ms-beginUndoUnit');\n    } catch (e) {}\n    textarea.value = before + text + after;\n    try {\n      document.execCommand('ms-endUndoUnit');\n    } catch (e) {}\n    textarea.dispatchEvent(new CustomEvent('input', {\n      bubbles: true,\n      cancelable: true\n    }));\n  }\n  if (selectionStart != null && selectionEnd != null) {\n    textarea.setSelectionRange(selectionStart, selectionEnd);\n  } else {\n    textarea.setSelectionRange(originalSelectionStart, textarea.selectionEnd);\n  }\n}\nfunction styleSelectedText(textarea, styleArgs) {\n  const text = textarea.value.slice(textarea.selectionStart, textarea.selectionEnd);\n  let result;\n  if (styleArgs.orderedList) {\n    result = orderedList(textarea);\n  } else if (styleArgs.multiline && isMultipleLines(text)) {\n    result = multilineStyle(textarea, styleArgs);\n  } else {\n    result = blockStyle(textarea, styleArgs);\n  }\n  insertText(textarea, result);\n}\nfunction expandSelectedText(textarea, prefixToUse, suffixToUse) {\n  let multiline = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  if (textarea.selectionStart === textarea.selectionEnd) {\n    textarea.selectionStart = wordSelectionStart(textarea.value, textarea.selectionStart);\n    textarea.selectionEnd = wordSelectionEnd(textarea.value, textarea.selectionEnd, multiline);\n  } else {\n    const expandedSelectionStart = textarea.selectionStart - prefixToUse.length;\n    const expandedSelectionEnd = textarea.selectionEnd + suffixToUse.length;\n    const beginsWithPrefix = textarea.value.slice(expandedSelectionStart, textarea.selectionStart) === prefixToUse;\n    const endsWithSuffix = textarea.value.slice(textarea.selectionEnd, expandedSelectionEnd) === suffixToUse;\n    if (beginsWithPrefix && endsWithSuffix) {\n      textarea.selectionStart = expandedSelectionStart;\n      textarea.selectionEnd = expandedSelectionEnd;\n    }\n  }\n  return textarea.value.slice(textarea.selectionStart, textarea.selectionEnd);\n}\nfunction newlinesToSurroundSelectedText(textarea) {\n  const beforeSelection = textarea.value.slice(0, textarea.selectionStart);\n  const afterSelection = textarea.value.slice(textarea.selectionEnd);\n  const breaksBefore = beforeSelection.match(/\\n*$/);\n  const breaksAfter = afterSelection.match(/^\\n*/);\n  const newlinesBeforeSelection = breaksBefore ? breaksBefore[0].length : 0;\n  const newlinesAfterSelection = breaksAfter ? breaksAfter[0].length : 0;\n  let newlinesToAppend;\n  let newlinesToPrepend;\n  if (beforeSelection.match(/\\S/) && newlinesBeforeSelection < 2) {\n    newlinesToAppend = repeat('\\n', 2 - newlinesBeforeSelection);\n  }\n  if (afterSelection.match(/\\S/) && newlinesAfterSelection < 2) {\n    newlinesToPrepend = repeat('\\n', 2 - newlinesAfterSelection);\n  }\n  if (newlinesToAppend == null) {\n    newlinesToAppend = '';\n  }\n  if (newlinesToPrepend == null) {\n    newlinesToPrepend = '';\n  }\n  return {\n    newlinesToAppend,\n    newlinesToPrepend\n  };\n}\nfunction blockStyle(textarea, arg) {\n  let newlinesToAppend;\n  let newlinesToPrepend;\n  const {\n    prefix,\n    suffix,\n    blockPrefix,\n    blockSuffix,\n    replaceNext,\n    prefixSpace,\n    scanFor,\n    surroundWithNewlines\n  } = arg;\n  const originalSelectionStart = textarea.selectionStart;\n  const originalSelectionEnd = textarea.selectionEnd;\n  let selectedText = textarea.value.slice(textarea.selectionStart, textarea.selectionEnd);\n  let prefixToUse = isMultipleLines(selectedText) && blockPrefix.length > 0 ? `${blockPrefix}\\n` : prefix;\n  let suffixToUse = isMultipleLines(selectedText) && blockSuffix.length > 0 ? `\\n${blockSuffix}` : suffix;\n  if (prefixSpace) {\n    const beforeSelection = textarea.value[textarea.selectionStart - 1];\n    if (textarea.selectionStart !== 0 && beforeSelection != null && !beforeSelection.match(/\\s/)) {\n      prefixToUse = ` ${prefixToUse}`;\n    }\n  }\n  selectedText = expandSelectedText(textarea, prefixToUse, suffixToUse, arg.multiline);\n  let selectionStart = textarea.selectionStart;\n  let selectionEnd = textarea.selectionEnd;\n  const hasReplaceNext = replaceNext.length > 0 && suffixToUse.indexOf(replaceNext) > -1 && selectedText.length > 0;\n  if (surroundWithNewlines) {\n    const ref = newlinesToSurroundSelectedText(textarea);\n    newlinesToAppend = ref.newlinesToAppend;\n    newlinesToPrepend = ref.newlinesToPrepend;\n    prefixToUse = newlinesToAppend + prefix;\n    suffixToUse += newlinesToPrepend;\n  }\n  if (selectedText.startsWith(prefixToUse) && selectedText.endsWith(suffixToUse)) {\n    const replacementText = selectedText.slice(prefixToUse.length, selectedText.length - suffixToUse.length);\n    if (originalSelectionStart === originalSelectionEnd) {\n      let position = originalSelectionStart - prefixToUse.length;\n      position = Math.max(position, selectionStart);\n      position = Math.min(position, selectionStart + replacementText.length);\n      selectionStart = selectionEnd = position;\n    } else {\n      selectionEnd = selectionStart + replacementText.length;\n    }\n    return {\n      text: replacementText,\n      selectionStart,\n      selectionEnd\n    };\n  } else if (!hasReplaceNext) {\n    let replacementText = prefixToUse + selectedText + suffixToUse;\n    selectionStart = originalSelectionStart + prefixToUse.length;\n    selectionEnd = originalSelectionEnd + prefixToUse.length;\n    const whitespaceEdges = selectedText.match(/^\\s*|\\s*$/g);\n    if (arg.trimFirst && whitespaceEdges) {\n      const leadingWhitespace = whitespaceEdges[0] || '';\n      const trailingWhitespace = whitespaceEdges[1] || '';\n      replacementText = leadingWhitespace + prefixToUse + selectedText.trim() + suffixToUse + trailingWhitespace;\n      selectionStart += leadingWhitespace.length;\n      selectionEnd -= trailingWhitespace.length;\n    }\n    return {\n      text: replacementText,\n      selectionStart,\n      selectionEnd\n    };\n  } else if (scanFor.length > 0 && selectedText.match(scanFor)) {\n    suffixToUse = suffixToUse.replace(replaceNext, selectedText);\n    const replacementText = prefixToUse + suffixToUse;\n    selectionStart = selectionEnd = selectionStart + prefixToUse.length;\n    return {\n      text: replacementText,\n      selectionStart,\n      selectionEnd\n    };\n  } else {\n    const replacementText = prefixToUse + selectedText + suffixToUse;\n    selectionStart = selectionStart + prefixToUse.length + selectedText.length + suffixToUse.indexOf(replaceNext);\n    selectionEnd = selectionStart + replaceNext.length;\n    return {\n      text: replacementText,\n      selectionStart,\n      selectionEnd\n    };\n  }\n}\nfunction multilineStyle(textarea, arg) {\n  const {\n    prefix,\n    suffix,\n    surroundWithNewlines\n  } = arg;\n  let text = textarea.value.slice(textarea.selectionStart, textarea.selectionEnd);\n  let selectionStart = textarea.selectionStart;\n  let selectionEnd = textarea.selectionEnd;\n  const lines = text.split('\\n');\n  const undoStyle = lines.every(line => line.startsWith(prefix) && line.endsWith(suffix));\n  if (undoStyle) {\n    text = lines.map(line => line.slice(prefix.length, line.length - suffix.length)).join('\\n');\n    selectionEnd = selectionStart + text.length;\n  } else {\n    text = lines.map(line => prefix + line + suffix).join('\\n');\n    if (surroundWithNewlines) {\n      const {\n        newlinesToAppend,\n        newlinesToPrepend\n      } = newlinesToSurroundSelectedText(textarea);\n      selectionStart += newlinesToAppend.length;\n      selectionEnd = selectionStart + text.length;\n      text = newlinesToAppend + text + newlinesToPrepend;\n    }\n  }\n  return {\n    text,\n    selectionStart,\n    selectionEnd\n  };\n}\nfunction orderedList(textarea) {\n  const orderedListRegex = /^\\d+\\.\\s+/;\n  const noInitialSelection = textarea.selectionStart === textarea.selectionEnd;\n  let selectionEnd;\n  let selectionStart;\n  let text = textarea.value.slice(textarea.selectionStart, textarea.selectionEnd);\n  let textToUnstyle = text;\n  let lines = text.split('\\n');\n  let startOfLine, endOfLine;\n  if (noInitialSelection) {\n    const linesBefore = textarea.value.slice(0, textarea.selectionStart).split(/\\n/);\n    startOfLine = textarea.selectionStart - linesBefore[linesBefore.length - 1].length;\n    endOfLine = wordSelectionEnd(textarea.value, textarea.selectionStart, true);\n    textToUnstyle = textarea.value.slice(startOfLine, endOfLine);\n  }\n  const linesToUnstyle = textToUnstyle.split('\\n');\n  const undoStyling = linesToUnstyle.every(line => orderedListRegex.test(line));\n  if (undoStyling) {\n    lines = linesToUnstyle.map(line => line.replace(orderedListRegex, ''));\n    text = lines.join('\\n');\n    if (noInitialSelection && startOfLine && endOfLine) {\n      const lengthDiff = linesToUnstyle[0].length - lines[0].length;\n      selectionStart = selectionEnd = textarea.selectionStart - lengthDiff;\n      textarea.selectionStart = startOfLine;\n      textarea.selectionEnd = endOfLine;\n    }\n  } else {\n    lines = numberedLines(lines);\n    text = lines.join('\\n');\n    const {\n      newlinesToAppend,\n      newlinesToPrepend\n    } = newlinesToSurroundSelectedText(textarea);\n    selectionStart = textarea.selectionStart + newlinesToAppend.length;\n    selectionEnd = selectionStart + text.length;\n    if (noInitialSelection) selectionStart = selectionEnd;\n    text = newlinesToAppend + text + newlinesToPrepend;\n  }\n  return {\n    text,\n    selectionStart,\n    selectionEnd\n  };\n}\nfunction numberedLines(lines) {\n  let i;\n  let len;\n  let index;\n  const results = [];\n  for (index = i = 0, len = lines.length; i < len; index = ++i) {\n    const line = lines[index];\n    results.push(`${index + 1}. ${line}`);\n  }\n  return results;\n}\nfunction applyStyle(button, stylesToApply) {\n  const toolbar = button.closest('markdown-toolbar');\n  if (!(toolbar instanceof MarkdownToolbarElement)) return;\n  const defaults = {\n    prefix: '',\n    suffix: '',\n    blockPrefix: '',\n    blockSuffix: '',\n    multiline: false,\n    replaceNext: '',\n    prefixSpace: false,\n    scanFor: '',\n    surroundWithNewlines: false,\n    orderedList: false,\n    trimFirst: false\n  };\n  const style = Object.assign(Object.assign({}, defaults), stylesToApply);\n  const field = toolbar.field;\n  if (field) {\n    field.focus();\n    styleSelectedText(field, style);\n  }\n}\nexport default MarkdownToolbarElement;","map":{"version":3,"names":["buttonSelectors","getButtons","toolbar","els","button","querySelectorAll","join","hidden","offsetWidth","offsetHeight","closest","push","keydown","fn","event","key","preventDefault","styles","WeakMap","MarkdownButtonElement","HTMLElement","constructor","apply","style","get","applyStyle","addEventListener","connectedCallback","hasAttribute","setAttribute","click","MarkdownHeaderButtonElement","level","parseInt","getAttribute","prefix","repeat","set","window","customElements","define","MarkdownBoldButtonElement","suffix","trimFirst","MarkdownItalicButtonElement","MarkdownQuoteButtonElement","multiline","surroundWithNewlines","MarkdownCodeButtonElement","blockPrefix","blockSuffix","MarkdownLinkButtonElement","replaceNext","scanFor","MarkdownImageButtonElement","MarkdownUnorderedListButtonElement","MarkdownOrderedListButtonElement","orderedList","MarkdownTaskListButtonElement","MarkdownMentionButtonElement","prefixSpace","MarkdownRefButtonElement","MarkdownStrikethroughButtonElement","modifierKey","navigator","userAgent","match","MarkdownToolbarElement","focusKeydown","shortcut","bind","field","shortcutListeners","onToolbarFocus","once","disconnectedCallback","removeEventListener","delete","id","root","getRootNode","document","Document","ShadowRoot","getElementById","HTMLTextAreaElement","target","Element","removeAttribute","tabindex","focus","currentTarget","buttons","index","indexOf","length","n","i","findHotkey","el","metaKey","ctrlKey","isMultipleLines","string","trim","split","Array","wordSelectionStart","text","wordSelectionEnd","breakpoint","canInsertText","insertText","textarea","selectionStart","selectionEnd","originalSelectionStart","before","value","slice","after","contentEditable","execCommand","error","endsWith","e","dispatchEvent","CustomEvent","bubbles","cancelable","setSelectionRange","styleSelectedText","styleArgs","result","multilineStyle","blockStyle","expandSelectedText","prefixToUse","suffixToUse","expandedSelectionStart","expandedSelectionEnd","beginsWithPrefix","endsWithSuffix","newlinesToSurroundSelectedText","beforeSelection","afterSelection","breaksBefore","breaksAfter","newlinesBeforeSelection","newlinesAfterSelection","newlinesToAppend","newlinesToPrepend","arg","originalSelectionEnd","selectedText","hasReplaceNext","ref","startsWith","replacementText","position","Math","max","min","whitespaceEdges","leadingWhitespace","trailingWhitespace","replace","lines","undoStyle","every","line","map","orderedListRegex","noInitialSelection","textToUnstyle","startOfLine","endOfLine","linesBefore","linesToUnstyle","undoStyling","test","lengthDiff","numberedLines","len","results","stylesToApply","defaults","Object","assign"],"sources":["D:/github/editor.io/node_modules/@github/markdown-toolbar-element/dist/index.js"],"sourcesContent":["const buttonSelectors = [\n    '[data-md-button]',\n    'md-header',\n    'md-bold',\n    'md-italic',\n    'md-quote',\n    'md-code',\n    'md-link',\n    'md-image',\n    'md-unordered-list',\n    'md-ordered-list',\n    'md-task-list',\n    'md-mention',\n    'md-ref',\n    'md-strikethrough'\n];\nfunction getButtons(toolbar) {\n    const els = [];\n    for (const button of toolbar.querySelectorAll(buttonSelectors.join(', '))) {\n        if (button.hidden || (button.offsetWidth <= 0 && button.offsetHeight <= 0))\n            continue;\n        if (button.closest('markdown-toolbar') === toolbar)\n            els.push(button);\n    }\n    return els;\n}\nfunction keydown(fn) {\n    return function (event) {\n        if (event.key === ' ' || event.key === 'Enter') {\n            event.preventDefault();\n            fn(event);\n        }\n    };\n}\nconst styles = new WeakMap();\nclass MarkdownButtonElement extends HTMLElement {\n    constructor() {\n        super();\n        const apply = () => {\n            const style = styles.get(this);\n            if (!style)\n                return;\n            applyStyle(this, style);\n        };\n        this.addEventListener('keydown', keydown(apply));\n        this.addEventListener('click', apply);\n    }\n    connectedCallback() {\n        if (!this.hasAttribute('role')) {\n            this.setAttribute('role', 'button');\n        }\n    }\n    click() {\n        const style = styles.get(this);\n        if (!style)\n            return;\n        applyStyle(this, style);\n    }\n}\nclass MarkdownHeaderButtonElement extends MarkdownButtonElement {\n    constructor() {\n        super();\n        const level = parseInt(this.getAttribute('level') || '3', 10);\n        if (level < 1 || level > 6) {\n            return;\n        }\n        const prefix = `${'#'.repeat(level)} `;\n        styles.set(this, {\n            prefix\n        });\n    }\n}\nif (!window.customElements.get('md-header')) {\n    window.MarkdownHeaderButtonElement = MarkdownHeaderButtonElement;\n    window.customElements.define('md-header', MarkdownHeaderButtonElement);\n}\nclass MarkdownBoldButtonElement extends MarkdownButtonElement {\n    constructor() {\n        super();\n        styles.set(this, { prefix: '**', suffix: '**', trimFirst: true });\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        this.setAttribute('hotkey', 'b');\n    }\n}\nif (!window.customElements.get('md-bold')) {\n    window.MarkdownBoldButtonElement = MarkdownBoldButtonElement;\n    window.customElements.define('md-bold', MarkdownBoldButtonElement);\n}\nclass MarkdownItalicButtonElement extends MarkdownButtonElement {\n    constructor() {\n        super();\n        styles.set(this, { prefix: '_', suffix: '_', trimFirst: true });\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        this.setAttribute('hotkey', 'i');\n    }\n}\nif (!window.customElements.get('md-italic')) {\n    window.MarkdownItalicButtonElement = MarkdownItalicButtonElement;\n    window.customElements.define('md-italic', MarkdownItalicButtonElement);\n}\nclass MarkdownQuoteButtonElement extends MarkdownButtonElement {\n    constructor() {\n        super();\n        styles.set(this, { prefix: '> ', multiline: true, surroundWithNewlines: true });\n    }\n}\nif (!window.customElements.get('md-quote')) {\n    window.MarkdownQuoteButtonElement = MarkdownQuoteButtonElement;\n    window.customElements.define('md-quote', MarkdownQuoteButtonElement);\n}\nclass MarkdownCodeButtonElement extends MarkdownButtonElement {\n    constructor() {\n        super();\n        styles.set(this, { prefix: '`', suffix: '`', blockPrefix: '```', blockSuffix: '```' });\n    }\n}\nif (!window.customElements.get('md-code')) {\n    window.MarkdownCodeButtonElement = MarkdownCodeButtonElement;\n    window.customElements.define('md-code', MarkdownCodeButtonElement);\n}\nclass MarkdownLinkButtonElement extends MarkdownButtonElement {\n    constructor() {\n        super();\n        styles.set(this, { prefix: '[', suffix: '](url)', replaceNext: 'url', scanFor: 'https?://' });\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        this.setAttribute('hotkey', 'k');\n    }\n}\nif (!window.customElements.get('md-link')) {\n    window.MarkdownLinkButtonElement = MarkdownLinkButtonElement;\n    window.customElements.define('md-link', MarkdownLinkButtonElement);\n}\nclass MarkdownImageButtonElement extends MarkdownButtonElement {\n    constructor() {\n        super();\n        styles.set(this, { prefix: '![', suffix: '](url)', replaceNext: 'url', scanFor: 'https?://' });\n    }\n}\nif (!window.customElements.get('md-image')) {\n    window.MarkdownImageButtonElement = MarkdownImageButtonElement;\n    window.customElements.define('md-image', MarkdownImageButtonElement);\n}\nclass MarkdownUnorderedListButtonElement extends MarkdownButtonElement {\n    constructor() {\n        super();\n        styles.set(this, { prefix: '- ', multiline: true, surroundWithNewlines: true });\n    }\n}\nif (!window.customElements.get('md-unordered-list')) {\n    window.MarkdownUnorderedListButtonElement = MarkdownUnorderedListButtonElement;\n    window.customElements.define('md-unordered-list', MarkdownUnorderedListButtonElement);\n}\nclass MarkdownOrderedListButtonElement extends MarkdownButtonElement {\n    constructor() {\n        super();\n        styles.set(this, { prefix: '1. ', multiline: true, orderedList: true });\n    }\n}\nif (!window.customElements.get('md-ordered-list')) {\n    window.MarkdownOrderedListButtonElement = MarkdownOrderedListButtonElement;\n    window.customElements.define('md-ordered-list', MarkdownOrderedListButtonElement);\n}\nclass MarkdownTaskListButtonElement extends MarkdownButtonElement {\n    constructor() {\n        super();\n        styles.set(this, { prefix: '- [ ] ', multiline: true, surroundWithNewlines: true });\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        this.setAttribute('hotkey', 'L');\n    }\n}\nif (!window.customElements.get('md-task-list')) {\n    window.MarkdownTaskListButtonElement = MarkdownTaskListButtonElement;\n    window.customElements.define('md-task-list', MarkdownTaskListButtonElement);\n}\nclass MarkdownMentionButtonElement extends MarkdownButtonElement {\n    constructor() {\n        super();\n        styles.set(this, { prefix: '@', prefixSpace: true });\n    }\n}\nif (!window.customElements.get('md-mention')) {\n    window.MarkdownMentionButtonElement = MarkdownMentionButtonElement;\n    window.customElements.define('md-mention', MarkdownMentionButtonElement);\n}\nclass MarkdownRefButtonElement extends MarkdownButtonElement {\n    constructor() {\n        super();\n        styles.set(this, { prefix: '#', prefixSpace: true });\n    }\n}\nif (!window.customElements.get('md-ref')) {\n    window.MarkdownRefButtonElement = MarkdownRefButtonElement;\n    window.customElements.define('md-ref', MarkdownRefButtonElement);\n}\nclass MarkdownStrikethroughButtonElement extends MarkdownButtonElement {\n    constructor() {\n        super();\n        styles.set(this, { prefix: '~~', suffix: '~~', trimFirst: true });\n    }\n}\nif (!window.customElements.get('md-strikethrough')) {\n    window.MarkdownStrikethroughButtonElement = MarkdownStrikethroughButtonElement;\n    window.customElements.define('md-strikethrough', MarkdownStrikethroughButtonElement);\n}\nconst modifierKey = navigator.userAgent.match(/Macintosh/) ? 'Meta' : 'Control';\nclass MarkdownToolbarElement extends HTMLElement {\n    constructor() {\n        super();\n    }\n    connectedCallback() {\n        if (!this.hasAttribute('role')) {\n            this.setAttribute('role', 'toolbar');\n        }\n        this.addEventListener('keydown', focusKeydown);\n        const fn = shortcut.bind(null, this);\n        if (this.field) {\n            this.field.addEventListener('keydown', fn);\n            shortcutListeners.set(this, fn);\n        }\n        this.setAttribute('tabindex', '0');\n        this.addEventListener('focus', onToolbarFocus, { once: true });\n    }\n    disconnectedCallback() {\n        const fn = shortcutListeners.get(this);\n        if (fn && this.field) {\n            this.field.removeEventListener('keydown', fn);\n            shortcutListeners.delete(this);\n        }\n        this.removeEventListener('keydown', focusKeydown);\n    }\n    get field() {\n        const id = this.getAttribute('for');\n        if (!id)\n            return null;\n        const root = 'getRootNode' in this ? this.getRootNode() : document;\n        let field;\n        if (root instanceof Document || root instanceof ShadowRoot) {\n            field = root.getElementById(id);\n        }\n        return field instanceof HTMLTextAreaElement ? field : null;\n    }\n}\nfunction onToolbarFocus({ target }) {\n    if (!(target instanceof Element))\n        return;\n    target.removeAttribute('tabindex');\n    let tabindex = '0';\n    for (const button of getButtons(target)) {\n        button.setAttribute('tabindex', tabindex);\n        if (tabindex === '0') {\n            button.focus();\n            tabindex = '-1';\n        }\n    }\n}\nfunction focusKeydown(event) {\n    const key = event.key;\n    if (key !== 'ArrowRight' && key !== 'ArrowLeft' && key !== 'Home' && key !== 'End')\n        return;\n    const toolbar = event.currentTarget;\n    if (!(toolbar instanceof HTMLElement))\n        return;\n    const buttons = getButtons(toolbar);\n    const index = buttons.indexOf(event.target);\n    const length = buttons.length;\n    if (index === -1)\n        return;\n    let n = 0;\n    if (key === 'ArrowLeft')\n        n = index - 1;\n    if (key === 'ArrowRight')\n        n = index + 1;\n    if (key === 'End')\n        n = length - 1;\n    if (n < 0)\n        n = length - 1;\n    if (n > length - 1)\n        n = 0;\n    for (let i = 0; i < length; i += 1) {\n        buttons[i].setAttribute('tabindex', i === n ? '0' : '-1');\n    }\n    event.preventDefault();\n    buttons[n].focus();\n}\nconst shortcutListeners = new WeakMap();\nfunction findHotkey(toolbar, key) {\n    for (const el of toolbar.querySelectorAll('[hotkey]')) {\n        if (el.getAttribute('hotkey') === key) {\n            return el;\n        }\n    }\n    return null;\n}\nfunction shortcut(toolbar, event) {\n    if ((event.metaKey && modifierKey === 'Meta') || (event.ctrlKey && modifierKey === 'Control')) {\n        const button = findHotkey(toolbar, event.key);\n        if (button) {\n            button.click();\n            event.preventDefault();\n        }\n    }\n}\nif (!window.customElements.get('markdown-toolbar')) {\n    window.MarkdownToolbarElement = MarkdownToolbarElement;\n    window.customElements.define('markdown-toolbar', MarkdownToolbarElement);\n}\nfunction isMultipleLines(string) {\n    return string.trim().split('\\n').length > 1;\n}\nfunction repeat(string, n) {\n    return Array(n + 1).join(string);\n}\nfunction wordSelectionStart(text, i) {\n    let index = i;\n    while (text[index] && text[index - 1] != null && !text[index - 1].match(/\\s/)) {\n        index--;\n    }\n    return index;\n}\nfunction wordSelectionEnd(text, i, multiline) {\n    let index = i;\n    const breakpoint = multiline ? /\\n/ : /\\s/;\n    while (text[index] && !text[index].match(breakpoint)) {\n        index++;\n    }\n    return index;\n}\nlet canInsertText = null;\nfunction insertText(textarea, { text, selectionStart, selectionEnd }) {\n    const originalSelectionStart = textarea.selectionStart;\n    const before = textarea.value.slice(0, originalSelectionStart);\n    const after = textarea.value.slice(textarea.selectionEnd);\n    if (canInsertText === null || canInsertText === true) {\n        textarea.contentEditable = 'true';\n        try {\n            canInsertText = document.execCommand('insertText', false, text);\n        }\n        catch (error) {\n            canInsertText = false;\n        }\n        textarea.contentEditable = 'false';\n    }\n    if (canInsertText && !textarea.value.slice(0, textarea.selectionStart).endsWith(text)) {\n        canInsertText = false;\n    }\n    if (!canInsertText) {\n        try {\n            document.execCommand('ms-beginUndoUnit');\n        }\n        catch (e) {\n        }\n        textarea.value = before + text + after;\n        try {\n            document.execCommand('ms-endUndoUnit');\n        }\n        catch (e) {\n        }\n        textarea.dispatchEvent(new CustomEvent('input', { bubbles: true, cancelable: true }));\n    }\n    if (selectionStart != null && selectionEnd != null) {\n        textarea.setSelectionRange(selectionStart, selectionEnd);\n    }\n    else {\n        textarea.setSelectionRange(originalSelectionStart, textarea.selectionEnd);\n    }\n}\nfunction styleSelectedText(textarea, styleArgs) {\n    const text = textarea.value.slice(textarea.selectionStart, textarea.selectionEnd);\n    let result;\n    if (styleArgs.orderedList) {\n        result = orderedList(textarea);\n    }\n    else if (styleArgs.multiline && isMultipleLines(text)) {\n        result = multilineStyle(textarea, styleArgs);\n    }\n    else {\n        result = blockStyle(textarea, styleArgs);\n    }\n    insertText(textarea, result);\n}\nfunction expandSelectedText(textarea, prefixToUse, suffixToUse, multiline = false) {\n    if (textarea.selectionStart === textarea.selectionEnd) {\n        textarea.selectionStart = wordSelectionStart(textarea.value, textarea.selectionStart);\n        textarea.selectionEnd = wordSelectionEnd(textarea.value, textarea.selectionEnd, multiline);\n    }\n    else {\n        const expandedSelectionStart = textarea.selectionStart - prefixToUse.length;\n        const expandedSelectionEnd = textarea.selectionEnd + suffixToUse.length;\n        const beginsWithPrefix = textarea.value.slice(expandedSelectionStart, textarea.selectionStart) === prefixToUse;\n        const endsWithSuffix = textarea.value.slice(textarea.selectionEnd, expandedSelectionEnd) === suffixToUse;\n        if (beginsWithPrefix && endsWithSuffix) {\n            textarea.selectionStart = expandedSelectionStart;\n            textarea.selectionEnd = expandedSelectionEnd;\n        }\n    }\n    return textarea.value.slice(textarea.selectionStart, textarea.selectionEnd);\n}\nfunction newlinesToSurroundSelectedText(textarea) {\n    const beforeSelection = textarea.value.slice(0, textarea.selectionStart);\n    const afterSelection = textarea.value.slice(textarea.selectionEnd);\n    const breaksBefore = beforeSelection.match(/\\n*$/);\n    const breaksAfter = afterSelection.match(/^\\n*/);\n    const newlinesBeforeSelection = breaksBefore ? breaksBefore[0].length : 0;\n    const newlinesAfterSelection = breaksAfter ? breaksAfter[0].length : 0;\n    let newlinesToAppend;\n    let newlinesToPrepend;\n    if (beforeSelection.match(/\\S/) && newlinesBeforeSelection < 2) {\n        newlinesToAppend = repeat('\\n', 2 - newlinesBeforeSelection);\n    }\n    if (afterSelection.match(/\\S/) && newlinesAfterSelection < 2) {\n        newlinesToPrepend = repeat('\\n', 2 - newlinesAfterSelection);\n    }\n    if (newlinesToAppend == null) {\n        newlinesToAppend = '';\n    }\n    if (newlinesToPrepend == null) {\n        newlinesToPrepend = '';\n    }\n    return { newlinesToAppend, newlinesToPrepend };\n}\nfunction blockStyle(textarea, arg) {\n    let newlinesToAppend;\n    let newlinesToPrepend;\n    const { prefix, suffix, blockPrefix, blockSuffix, replaceNext, prefixSpace, scanFor, surroundWithNewlines } = arg;\n    const originalSelectionStart = textarea.selectionStart;\n    const originalSelectionEnd = textarea.selectionEnd;\n    let selectedText = textarea.value.slice(textarea.selectionStart, textarea.selectionEnd);\n    let prefixToUse = isMultipleLines(selectedText) && blockPrefix.length > 0 ? `${blockPrefix}\\n` : prefix;\n    let suffixToUse = isMultipleLines(selectedText) && blockSuffix.length > 0 ? `\\n${blockSuffix}` : suffix;\n    if (prefixSpace) {\n        const beforeSelection = textarea.value[textarea.selectionStart - 1];\n        if (textarea.selectionStart !== 0 && beforeSelection != null && !beforeSelection.match(/\\s/)) {\n            prefixToUse = ` ${prefixToUse}`;\n        }\n    }\n    selectedText = expandSelectedText(textarea, prefixToUse, suffixToUse, arg.multiline);\n    let selectionStart = textarea.selectionStart;\n    let selectionEnd = textarea.selectionEnd;\n    const hasReplaceNext = replaceNext.length > 0 && suffixToUse.indexOf(replaceNext) > -1 && selectedText.length > 0;\n    if (surroundWithNewlines) {\n        const ref = newlinesToSurroundSelectedText(textarea);\n        newlinesToAppend = ref.newlinesToAppend;\n        newlinesToPrepend = ref.newlinesToPrepend;\n        prefixToUse = newlinesToAppend + prefix;\n        suffixToUse += newlinesToPrepend;\n    }\n    if (selectedText.startsWith(prefixToUse) && selectedText.endsWith(suffixToUse)) {\n        const replacementText = selectedText.slice(prefixToUse.length, selectedText.length - suffixToUse.length);\n        if (originalSelectionStart === originalSelectionEnd) {\n            let position = originalSelectionStart - prefixToUse.length;\n            position = Math.max(position, selectionStart);\n            position = Math.min(position, selectionStart + replacementText.length);\n            selectionStart = selectionEnd = position;\n        }\n        else {\n            selectionEnd = selectionStart + replacementText.length;\n        }\n        return { text: replacementText, selectionStart, selectionEnd };\n    }\n    else if (!hasReplaceNext) {\n        let replacementText = prefixToUse + selectedText + suffixToUse;\n        selectionStart = originalSelectionStart + prefixToUse.length;\n        selectionEnd = originalSelectionEnd + prefixToUse.length;\n        const whitespaceEdges = selectedText.match(/^\\s*|\\s*$/g);\n        if (arg.trimFirst && whitespaceEdges) {\n            const leadingWhitespace = whitespaceEdges[0] || '';\n            const trailingWhitespace = whitespaceEdges[1] || '';\n            replacementText = leadingWhitespace + prefixToUse + selectedText.trim() + suffixToUse + trailingWhitespace;\n            selectionStart += leadingWhitespace.length;\n            selectionEnd -= trailingWhitespace.length;\n        }\n        return { text: replacementText, selectionStart, selectionEnd };\n    }\n    else if (scanFor.length > 0 && selectedText.match(scanFor)) {\n        suffixToUse = suffixToUse.replace(replaceNext, selectedText);\n        const replacementText = prefixToUse + suffixToUse;\n        selectionStart = selectionEnd = selectionStart + prefixToUse.length;\n        return { text: replacementText, selectionStart, selectionEnd };\n    }\n    else {\n        const replacementText = prefixToUse + selectedText + suffixToUse;\n        selectionStart = selectionStart + prefixToUse.length + selectedText.length + suffixToUse.indexOf(replaceNext);\n        selectionEnd = selectionStart + replaceNext.length;\n        return { text: replacementText, selectionStart, selectionEnd };\n    }\n}\nfunction multilineStyle(textarea, arg) {\n    const { prefix, suffix, surroundWithNewlines } = arg;\n    let text = textarea.value.slice(textarea.selectionStart, textarea.selectionEnd);\n    let selectionStart = textarea.selectionStart;\n    let selectionEnd = textarea.selectionEnd;\n    const lines = text.split('\\n');\n    const undoStyle = lines.every(line => line.startsWith(prefix) && line.endsWith(suffix));\n    if (undoStyle) {\n        text = lines.map(line => line.slice(prefix.length, line.length - suffix.length)).join('\\n');\n        selectionEnd = selectionStart + text.length;\n    }\n    else {\n        text = lines.map(line => prefix + line + suffix).join('\\n');\n        if (surroundWithNewlines) {\n            const { newlinesToAppend, newlinesToPrepend } = newlinesToSurroundSelectedText(textarea);\n            selectionStart += newlinesToAppend.length;\n            selectionEnd = selectionStart + text.length;\n            text = newlinesToAppend + text + newlinesToPrepend;\n        }\n    }\n    return { text, selectionStart, selectionEnd };\n}\nfunction orderedList(textarea) {\n    const orderedListRegex = /^\\d+\\.\\s+/;\n    const noInitialSelection = textarea.selectionStart === textarea.selectionEnd;\n    let selectionEnd;\n    let selectionStart;\n    let text = textarea.value.slice(textarea.selectionStart, textarea.selectionEnd);\n    let textToUnstyle = text;\n    let lines = text.split('\\n');\n    let startOfLine, endOfLine;\n    if (noInitialSelection) {\n        const linesBefore = textarea.value.slice(0, textarea.selectionStart).split(/\\n/);\n        startOfLine = textarea.selectionStart - linesBefore[linesBefore.length - 1].length;\n        endOfLine = wordSelectionEnd(textarea.value, textarea.selectionStart, true);\n        textToUnstyle = textarea.value.slice(startOfLine, endOfLine);\n    }\n    const linesToUnstyle = textToUnstyle.split('\\n');\n    const undoStyling = linesToUnstyle.every(line => orderedListRegex.test(line));\n    if (undoStyling) {\n        lines = linesToUnstyle.map(line => line.replace(orderedListRegex, ''));\n        text = lines.join('\\n');\n        if (noInitialSelection && startOfLine && endOfLine) {\n            const lengthDiff = linesToUnstyle[0].length - lines[0].length;\n            selectionStart = selectionEnd = textarea.selectionStart - lengthDiff;\n            textarea.selectionStart = startOfLine;\n            textarea.selectionEnd = endOfLine;\n        }\n    }\n    else {\n        lines = numberedLines(lines);\n        text = lines.join('\\n');\n        const { newlinesToAppend, newlinesToPrepend } = newlinesToSurroundSelectedText(textarea);\n        selectionStart = textarea.selectionStart + newlinesToAppend.length;\n        selectionEnd = selectionStart + text.length;\n        if (noInitialSelection)\n            selectionStart = selectionEnd;\n        text = newlinesToAppend + text + newlinesToPrepend;\n    }\n    return { text, selectionStart, selectionEnd };\n}\nfunction numberedLines(lines) {\n    let i;\n    let len;\n    let index;\n    const results = [];\n    for (index = i = 0, len = lines.length; i < len; index = ++i) {\n        const line = lines[index];\n        results.push(`${index + 1}. ${line}`);\n    }\n    return results;\n}\nfunction applyStyle(button, stylesToApply) {\n    const toolbar = button.closest('markdown-toolbar');\n    if (!(toolbar instanceof MarkdownToolbarElement))\n        return;\n    const defaults = {\n        prefix: '',\n        suffix: '',\n        blockPrefix: '',\n        blockSuffix: '',\n        multiline: false,\n        replaceNext: '',\n        prefixSpace: false,\n        scanFor: '',\n        surroundWithNewlines: false,\n        orderedList: false,\n        trimFirst: false\n    };\n    const style = Object.assign(Object.assign({}, defaults), stylesToApply);\n    const field = toolbar.field;\n    if (field) {\n        field.focus();\n        styleSelectedText(field, style);\n    }\n}\nexport default MarkdownToolbarElement;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}